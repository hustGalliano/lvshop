server:
  port: 8083

spring:
  application:
    name: lvshop-cache
  #================= Kafka ===================
  kafka:
    # 指定kafka 代理地址，可以多个
    bootstrap-servers: hang1:9092
    consumer:
      group-id: lvshop-data
#      auto-offset-reset: earliest
      enable-auto-commit: true
      auto-commit-interval: 1000
      # 指定消息key和消息体的编解码方式
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
  #================= Reids ===================
  redis:
    host: hang1
    port: 7001
    timeout: 5000
    # 只需要加以下3行，就集成了RedisCluster，但是要注意：redis服务器上一定要开启集群
    cluster:
      nodes: hang1:7001,hang1:7002,hang1:7003,hang1:7004,hang1:7005,hang1:7006
      maxRedirects: 6 # 默认值是5，设置过大时容易报错：Too many Cluster redirections
    jedis:
      pool:
        max-active: -1
        max-wait: -1
        max-idle: 100
        min-idle: 0


#================= Dubbo ===================
dubbo:
  application:
    name: lvshop-cache
  registry:
    address: zookeeper://hang1:2181
  scan:
    base-packages: com.lvshop.cache
  protocol:
    name: dubbo
    port: 20880
  monitor:
    protocol: registry


#hystrix:
#  command:
#    default:
#      execution:
#        isolation:
#          strategy: THREAD
#          thread:
#            # 线程超时 100ms,调用Fallback方法
#            timeoutInMilliseconds: 100
##      metrics:
##        rollingStats:
##          timeInMilliseconds: 15000
#      circuitBreaker:
#        # 60秒内出现1000个以上请求(已临近阀值),并且出错率在50%以上,开启断路器.断开服务,调用Fallback方法
#        requestVolumeThreshold: 1000
#        errorThresholdPercentage: 70
#        sleepWindowInMilliseconds: 60000



logging:
  level:
    root: info
    org.springframework.web: info
    com。lvshop.cache: info
  file: lvshop-cache.log


debug: true

# 监控管理平台
management:
  server:
    port: 8083