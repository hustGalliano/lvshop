server:
  port: 8081

spring:
  application:
    name: lvshop-datasource
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://hang:3306/lvshop?useUnicode=true&characterEncoding=utf8&autoReconnect=true&allowMultiQueries=true&zeroDateTimeBehavior=convertToNull&serverTimezone=UTC
    username: root
    password: 1101

  kafka:
    bootstrap-servers: hang1:9092
    producer:
      retries: 0
      # 每次批量发送消息的数量
      batch-size: 16384
      buffer-memory: 33554432
      # 指定消息key和消息体的编解码方式
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer



  shardingsphere:
    #数据源
    datasource:
#      names: lvshop_m0, lvshop_m0_s0, lvshop_m0_s1, lvshop_m1, lvshop_m1_s0, lvshop_m1_s1
      names: lvshop_m0, lvshop_m0_s0
      lvshop_m0:
        type: com.alibaba.druid.pool.DruidDataSource
        driverClassName: com.mysql.cj.jdbc.Driver
        url: jdbc:mysql://hang1:3306/lvshop_m0?useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&allowMultiQueries=true&serverTimezone=Asia/Shanghai&allowMultiQueries=true
        username: root
        password: 1101
      lvshop_m0_s0:
        type: com.alibaba.druid.pool.DruidDataSource
        driverClassName: com.mysql.cj.jdbc.Driver
        url: jdbc:mysql://hang2:3306/lvshop_m0_s0?useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&allowMultiQueries=true&serverTimezone=Asia/Shanghai&allowMultiQueries=true
        username: root
        password: 1101
#      lvshop_m0_s1:
#        type: com.alibaba.druid.pool.DruidDataSource
#        driverClassName: com.mysql.cj.jdbc.Driver
#        url: jdbc:mysql://hang3:3306/lvshop_m0_s1?useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&allowMultiQueries=true&serverTimezone=Asia/Shanghai&allowMultiQueries=true
#        username: root
#        password: 1101
#      lvshop_m1:
#        type: com.alibaba.druid.pool.DruidDataSource
#        driverClassName: com.mysql.cj.jdbc.Driver
#        url: jdbc:mysql://hang4:3306/lvshop_m1?useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&allowMultiQueries=true&serverTimezone=Asia/Shanghai&allowMultiQueries=true
#        username: root
#        password: 1101
#      lvshop_m1_s0:
#        type: com.alibaba.druid.pool.DruidDataSource
#        driverClassName: com.mysql.cj.jdbc.Driver
#        url: jdbc:mysql://hang5:3306/lvshop_m1_s0?useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&allowMultiQueries=true&serverTimezone=Asia/Shanghai&allowMultiQueries=true
#        username: root
#        password: 1101
#      lvshop_m1_s1:
#        type: com.alibaba.druid.pool.DruidDataSource
#        driverClassName: com.mysql.cj.jdbc.Driver
#        url: jdbc:mysql://hang6:3306/lvshop_m1_s1?useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&allowMultiQueries=true&serverTimezone=Asia/Shanghai&allowMultiQueries=true
#        username: root
#        password: 1101
    sharding:
      # 主从关系
      master-slave-rules:
        lvshop:
          master-data-source-name: lvshop_m0
          slave-data-source-names: lvshop_m0_s0

#      default-database-strategy:
#        inline:
#          sharding-column: id
#          algorithm-expression: lvshop_m$->{id % 2}

#      tables:
#        tb_product_info: # 表名
#          # 表的数据分布情况，配置数据节点 m1.t_order_1,m1.t_order_2
#          actual-data-nodes: lvshop$->{0..1}.tb_product_info_$->{0..1}
#          # 表的分表策略，包括分表键和分表算法
#          tableStrategy:
#            inline:
#              shardingColumn: id
#              algorithmExpression: tb_product_info_$->{id % 2}
#          # 表的分库策略，包括分库键和分库算法
#          databaseStrategy:
#            inline:
#              shardingColumn: shop_id
#              algorithmExpression: lvshop$->{shop_id % 2}
#          # 表的主键生成策略、主键名
#          keyGenerator:
#            type: SNOWFLAKE
#            column: id

#      binding-tables[0]: product_info,product_descriot # 将这2个表设置成绑定表，不配置则会产生笛卡尔积
#      broadcast-tables: t_dict # 将该表设置为广播表（公共表），每次更新操作都会发送到所有数据源
    # 打开sql输出日志
    props:
      sql:
        show: true # 是否开启SQL显示，默认值: false
      executor:
        size: 8 # 工作线程数量，默认值: CPU核数





mybatis:
  type-aliases-package: com.lvshop.commom.pojo
  mapper-locations: classpath:mybatis/*Mapper.xml
  configuration:
    map-underscore-to-camel-case: true



dubbo:
  application:
    name: lvshop-datasource
  registry:
    address: zookeeper://hang1:2181
  scan:
    base-packages: com.lvshop.datasource.service.impl
  protocol:
    name: dubbo
    port: 20880
  monitor:
    protocol: registry





logging:
  level:
    root: info
    org.springframework.web: info
    com。lvshop.datasource: info
  file: lvshop-datasource.log

